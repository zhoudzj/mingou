[2020-05-08T19:43:12.967] [WARN] server - 路由目录E:\myRepository\mingou\routes\application不可用, 未监听路由.
[2020-05-08T19:43:12.971] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T19:43:12.972] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T19:50:35.288] [WARN] server - 路由目录E:\myRepository\mingou\routes\application不可用, 未监听路由.
[2020-05-08T19:50:35.291] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T19:50:35.292] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T19:53:21.298] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T19:53:21.301] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T20:19:04.849] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T20:19:04.851] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T20:33:26.273] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T20:33:26.276] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T20:48:47.441] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T20:48:47.444] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T21:01:45.606] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T21:01:45.609] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T21:17:56.193] [WARN] server - Server Listening HTTP On port:6000
[2020-05-08T21:17:56.195] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-08T21:19:18.013] [WARN] response - *************DEBUG**************** 
time: 2020-5-8 21:19:18, / operate GET request failed 
header info: {"user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"513f85fc-65a1-4172-960e-94e2df9dd72e","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","connection":"keep-alive"} 
request body info: {} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

[2020-05-08T21:19:33.881] [WARN] response - *************DEBUG**************** 
time: 2020-5-8 21:19:33, /house/list operate GET request failed 
header info: {"user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"fdd4ecef-3f7a-4e8d-9e4f-2dfb1f2222ea","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","connection":"keep-alive"} 
request body info: {} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

[2020-05-08T21:20:20.836] [WARN] response - *************DEBUG**************** 
time: 2020-5-8 21:20:20, /house/list operate GET request failed 
header info: {"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-language":"zh-Hans-CN,zh-Hans;q=0.5","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362","accept-encoding":"gzip, deflate","host":"127.0.0.1:6000","connection":"Keep-Alive"} 
request body info: {} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

[2020-05-08T21:21:21.498] [WARN] response - *************DEBUG**************** 
time: 2020-5-8 21:21:21, /house/list operate GET request failed 
header info: {"cache-control":"max-age=0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-language":"zh-Hans-CN,zh-Hans;q=0.5","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362","accept-encoding":"gzip, deflate","host":"127.0.0.1:6000","connection":"Keep-Alive"} 
request body info: {} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

