[2020-05-25T07:13:01.905] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T07:13:01.910] [WARN] server - {
  port: 8001,
  path: '/Users/Mark/mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: '/Users/Mark/mingou/controllers/application',
  TASK_PATH: '/Users/Mark/mingou/tasks/application',
  MIDDLEWARE_PATH: '/Users/Mark/mingou/middlewares/application',
  ROUTE_PATH: '/Users/Mark/mingou/routes/application',
  MESSAGE_PATH: '/Users/Mark/mingou/messages/application',
  LOG_PATH: '/Users/Mark/mingou/logs/application',
  STATIC_PATH: '/Users/Mark/mingou/public/application'
}
[2020-05-25T08:35:49.402] [WARN] response - *************DEBUG**************** 
time: 2020/5/25 上午8:35:49, /user/register operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"29","accept":"application/json, text/plain, */*","authorization":"null","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"} 
request body info: {"userName":"","password":""} 
response info: {"code":1301,"message":"请先登录","data":null,"error":"请先登录"} 
error name: AppError 

[2020-05-25T08:35:58.557] [WARN] response - *************DEBUG**************** 
time: 2020/5/25 上午8:35:58, /user/register operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"29","accept":"application/json, text/plain, */*","authorization":"null","user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9,en;q=0.8"} 
request body info: {"userName":"","password":""} 
response info: {"code":1301,"message":"请先登录","data":null,"error":"请先登录"} 
error name: AppError 

[2020-05-25T14:42:49.421] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T14:42:49.423] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T17:30:20.095] [WARN] response - *************DEBUG**************** 
time: 2020-5-25 17:30:20, /user/login operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"39","accept":"application/json, text/plain, */*","authorization":"null","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9"} 
request body info: {"userName":"问问","password":"1233"} 
response info: {"code":11004,"message":"用户不存在","data":null,"error":"用户不存在"} 
error name: AppError 

[2020-05-25T17:40:48.769] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T17:40:48.771] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T18:47:11.719] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T18:47:11.732] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T18:47:13.969] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T18:47:13.971] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T18:57:15.249] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T18:57:15.251] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T18:59:41.765] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T18:59:41.766] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T19:05:47.280] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T19:05:47.282] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T19:07:40.616] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T19:07:40.618] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T19:08:27.097] [WARN] response - *************DEBUG**************** 
time: 2020-5-25 19:08:27, /user/register operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"51","accept":"application/json, text/plain, */*","authorization":"null","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9"} 
request body info: {"userName":"我是第一个","password":"8765432"} 
response info: {"code":400,"message":"用户名不能为空","data":null,"error":"Validate Failed"} 
error name: ValidateError 

[2020-05-25T19:09:35.660] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T19:09:35.661] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T20:37:07.458] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T20:37:07.459] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T20:45:14.359] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T20:45:14.361] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T20:47:38.960] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T20:47:39.006] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T21:08:25.232] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T21:08:25.235] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T21:18:56.809] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T21:18:56.810] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T21:23:19.843] [WARN] response - recv 404 request, path: /house/list, method: POST
[2020-05-25T21:23:19.845] [WARN] response - *************DEBUG**************** 
time: 2020-5-25 21:23:19, /house/list operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"53","accept":"application/json, text/plain, */*","authorization":"[object Object]","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9"} 
request body info: {"userName":"感谢是第一个","password":"123456"} 
response info: {"code":404,"message":"请求资源未找到","data":null,"error":"Not Found"} 
error name: NotFoundError 

[2020-05-25T21:29:17.473] [WARN] response - recv 404 request, path: /house/list, method: POST
[2020-05-25T21:29:17.475] [WARN] response - *************DEBUG**************** 
time: 2020-5-25 21:29:17, /house/list operate POST request failed 
header info: {"host":"localhost:8001","connection":"keep-alive","content-length":"51","accept":"application/json, text/plain, */*","authorization":"6qsnFm/flwGNMcLv/P2yEu/9IhmPXerrz6x6BIeMswc/efwl3RAcxV0A8WZRlmvjA3iaVxaCb01N9giiCUJPlg==","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.92 Safari/537.36","content-type":"application/json;charset=UTF-8","origin":"http://localhost:3000","sec-fetch-site":"same-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"http://localhost:3000/login","accept-encoding":"gzip, deflate, br","accept-language":"zh-CN,zh;q=0.9"} 
request body info: {"userName":"我是第一个","password":"8765432"} 
response info: {"code":404,"message":"请求资源未找到","data":null,"error":"Not Found"} 
error name: NotFoundError 

[2020-05-25T21:38:15.936] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T21:38:15.938] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-25T21:39:40.511] [WARN] server - Server Listening HTTP On port:8001
[2020-05-25T21:39:40.513] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
