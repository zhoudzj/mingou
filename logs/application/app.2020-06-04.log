[2020-06-04T10:42:35.866] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T10:42:35.868] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T11:49:19.701] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T11:49:19.703] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T11:56:46.416] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T11:56:46.417] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T11:59:11.675] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T11:59:11.676] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T12:03:00.190] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T12:03:00.192] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T12:04:02.472] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T12:04:02.473] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T18:15:34.810] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T18:15:34.812] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T19:30:22.928] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T19:30:22.930] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T19:32:57.792] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T19:32:57.795] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T19:42:27.881] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T19:42:27.882] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T19:53:33.533] [WARN] response - recv 404 request, path: /app/style/list, method: POST
[2020-06-04T19:53:33.536] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 19:53:33, /app/style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"ceb8b152-3461-463e-8884-ac3435eb9126","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":404,"message":"请求资源未找到","data":null,"error":"Not Found"} 
error name: NotFoundError 

[2020-06-04T20:00:50.246] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:00:50.248] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:01:30.182] [WARN] response - recv 404 request, path: /app/style/list, method: POST
[2020-06-04T20:01:30.183] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:01:30, /app/style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"435da184-a41e-4eb4-b6d9-27c441bc6d38","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":404,"message":"请求资源未找到","data":null,"error":"Not Found"} 
error name: NotFoundError 

[2020-06-04T20:01:58.002] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:01:58.003] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:02:24.691] [ERROR] response - /style/list request operate an no-base-error, name: TypeError, message: Cannot read property 'findAll' of undefined
[2020-06-04T20:02:24.692] [ERROR] response - TypeError: Cannot read property 'findAll' of undefined
    at find (E:\myRepository\mingou\controllers\application\style_house.js:14:47)
    at dispatch (E:\myRepository\mingou\node_modules\koa-router\node_modules\koa-compose\index.js:44:32)
    at next (E:\myRepository\mingou\node_modules\koa-router\node_modules\koa-compose\index.js:45:18)
    at E:\myRepository\mingou\node_modules\koa-router\lib\router.js:346:16
    at dispatch (E:\myRepository\mingou\node_modules\koa-router\node_modules\koa-compose\index.js:44:32)
    at E:\myRepository\mingou\node_modules\koa-router\node_modules\koa-compose\index.js:36:12
    at dispatch (E:\myRepository\mingou\node_modules\koa-router\lib\router.js:351:31)
    at dispatch (E:\myRepository\mingou\node_modules\koa-compose\index.js:42:32)
    at E:\myRepository\mingou\node_modules\ch-validator\index.js:95:16
    at dispatch (E:\myRepository\mingou\node_modules\koa-compose\index.js:42:32)
    at E:\myRepository\mingou\node_modules\ch-koa\route.js:15:16
    at dispatch (E:\myRepository\mingou\node_modules\koa-compose\index.js:42:32)
    at E:\myRepository\mingou\middlewares\application\token.js:26:15
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
    at async E:\myRepository\mingou\node_modules\ch-koa\format.js:29:13
    at async bodyParser (E:\myRepository\mingou\node_modules\koa-bodyparser\index.js:95:5)
[2020-06-04T20:02:24.698] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:02:24, /style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"b3bd9dca-8fa7-4b33-bc7d-d3e19e6c56f4","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"Cannot read property 'findAll' of undefined"} 
error name: SystemError 

[2020-06-04T20:04:00.800] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:04:00.802] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:04:10.628] [ERROR] response - /style/list request operate an no-base-error, name: Error, message: WHERE parameter "type_id" has invalid "undefined" value
[2020-06-04T20:04:10.629] [ERROR] response - Error: WHERE parameter "type_id" has invalid "undefined" value
    at MySQLQueryGenerator.whereItemQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2184:13)
    at E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2173:25
    at Array.forEach (<anonymous>)
    at MySQLQueryGenerator.whereItemsQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2171:35)
    at MySQLQueryGenerator.getWhereConditions (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2583:19)
    at MySQLQueryGenerator.selectQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:1315:28)
    at QueryInterface.select (E:\myRepository\mingou\node_modules\sequelize\lib\query-interface.js:1122:27)
    at E:\myRepository\mingou\node_modules\sequelize\lib\model.js:1757:34
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-06-04T20:04:10.648] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:04:10, /style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"80cf2af9-625e-4490-9265-b1b4604dae7e","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"WHERE parameter \"type_id\" has invalid \"undefined\" value"} 
error name: SystemError 

[2020-06-04T20:05:12.124] [ERROR] response - /style/list request operate an no-base-error, name: Error, message: WHERE parameter "type_id" has invalid "undefined" value
[2020-06-04T20:05:12.136] [ERROR] response - Error: WHERE parameter "type_id" has invalid "undefined" value
    at MySQLQueryGenerator.whereItemQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2184:13)
    at E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2173:25
    at Array.forEach (<anonymous>)
    at MySQLQueryGenerator.whereItemsQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2171:35)
    at MySQLQueryGenerator.getWhereConditions (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2583:19)
    at MySQLQueryGenerator.selectQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:1315:28)
    at QueryInterface.select (E:\myRepository\mingou\node_modules\sequelize\lib\query-interface.js:1122:27)
    at E:\myRepository\mingou\node_modules\sequelize\lib\model.js:1757:34
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-06-04T20:05:12.150] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:05:12, /style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"74479a36-c365-4cef-a241-d894a04ff698","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"WHERE parameter \"type_id\" has invalid \"undefined\" value"} 
error name: SystemError 

[2020-06-04T20:15:54.189] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:15:54.191] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:16:31.198] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:16:31.200] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:16:34.148] [ERROR] response - /style/list request operate an no-base-error, name: Error, message: WHERE parameter "type_id" has invalid "undefined" value
[2020-06-04T20:16:34.149] [ERROR] response - Error: WHERE parameter "type_id" has invalid "undefined" value
    at MySQLQueryGenerator.whereItemQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2184:13)
    at E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2173:25
    at Array.forEach (<anonymous>)
    at MySQLQueryGenerator.whereItemsQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2171:35)
    at MySQLQueryGenerator.getWhereConditions (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:2583:19)
    at MySQLQueryGenerator.selectQuery (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\abstract\query-generator.js:1315:28)
    at QueryInterface.select (E:\myRepository\mingou\node_modules\sequelize\lib\query-interface.js:1122:27)
    at E:\myRepository\mingou\node_modules\sequelize\lib\model.js:1757:34
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-06-04T20:16:34.170] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:16:34, /style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"04ce65d5-11c7-430b-80cc-42af7e82cbd8","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"11"} 
request body info: {"typeId":"1001"} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"WHERE parameter \"type_id\" has invalid \"undefined\" value"} 
error name: SystemError 

[2020-06-04T20:18:19.913] [WARN] server - Server Listening HTTP On port:8001
[2020-06-04T20:18:19.914] [WARN] server - {
  port: 8001,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Authorization' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-06-04T20:18:28.716] [WARN] response - *************DEBUG**************** 
time: 2020-6-4 20:18:28, /style/list operate POST request failed 
header info: {"authorization":"bml1p1optDBPTwSeuj+nZ8oN+EF5QngzZx0mhAnxiL2anu4fgONsWEj85MVEtARQuwiVMgxw5vkl3+bPnu4C7Q==","user-agent":"PostmanRuntime/7.24.1","accept":"*/*","cache-control":"no-cache","postman-token":"867d3a36-fce1-4a26-a793-3d7099049cd8","host":"localhost:8001","accept-encoding":"gzip, deflate, br","connection":"keep-alive","content-type":"application/x-www-form-urlencoded","content-length":"10"} 
request body info: {"typeI":"1001"} 
response info: {"code":400,"message":"户型分类编号不能为空","data":null,"error":"Validate Failed"} 
error name: ValidateError 

