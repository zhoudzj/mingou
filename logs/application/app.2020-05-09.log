[2020-05-09T10:42:44.118] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T10:42:44.121] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T10:42:57.252] [ERROR] response - /house/list request operate an no-base-error, name: SequelizeDatabaseError, message: Table 'mingou.house' doesn't exist
[2020-05-09T10:42:57.254] [ERROR] response - SequelizeDatabaseError: Table 'mingou.house' doesn't exist
    at Query.formatError (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\mysql\query.js:244:16)
    at Query.handler [as onResult] (E:\myRepository\mingou\node_modules\sequelize\lib\dialects\mysql\query.js:51:23)
    at Query.execute (E:\myRepository\mingou\node_modules\mysql2\lib\commands\command.js:30:14)
    at Connection.handlePacket (E:\myRepository\mingou\node_modules\mysql2\lib\connection.js:417:32)
    at PacketParser.onPacket (E:\myRepository\mingou\node_modules\mysql2\lib\connection.js:75:12)
    at PacketParser.executeStart (E:\myRepository\mingou\node_modules\mysql2\lib\packet_parser.js:75:16)
    at Socket.<anonymous> (E:\myRepository\mingou\node_modules\mysql2\lib\connection.js:82:25)
    at Socket.emit (events.js:311:20)
    at addChunk (_stream_readable.js:294:12)
    at readableAddChunk (_stream_readable.js:275:11)
    at Socket.Readable.push (_stream_readable.js:209:10)
    at TCP.onStreamRead (internal/stream_base_commons.js:186:23)
[2020-05-09T10:42:57.259] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 10:42:57, /house/list operate GET request failed 
header info: {"cache-control":"max-age=0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","accept-language":"zh-Hans-CN,zh-Hans;q=0.5","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362","accept-encoding":"gzip, deflate","host":"127.0.0.1:6000","connection":"Keep-Alive"} 
request body info: {} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"Table 'mingou.house' doesn't exist"} 
error name: SystemError 

[2020-05-09T12:26:46.755] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T12:26:46.758] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T12:37:03.077] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T12:37:03.079] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T14:32:51.041] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T14:32:51.043] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T16:14:24.449] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T16:14:24.450] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T16:52:48.921] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T16:52:48.922] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T17:10:27.764] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T17:10:27.767] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'connecting',
      condition: [Object],
      stream: [Socket],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T17:40:38.379] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T17:40:38.381] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:16:17.976] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:16:17.977] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:19:01.209] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:19:01, /house/create operate POST request failed 
header info: {"content-type":"text/plain","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"11722f5e-95fa-46cf-9b9f-1c1ddfb7a425","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"31","connection":"keep-alive"} 
request body info: {} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

[2020-05-09T18:19:46.548] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:19:46.549] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:19:48.917] [ERROR] response - /house/create request operate an no-base-error, name: SequelizeValidationError, message: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
[2020-05-09T18:19:48.920] [ERROR] response - SequelizeValidationError: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
    at E:\myRepository\mingou\node_modules\sequelize\lib\instance-validator.js:74:15
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at Promise._fulfill (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:673:18)
    at PromiseArray._resolve (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:127:19)
    at PromiseArray._promiseFulfilled (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:145:14)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:609:26)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-05-09T18:19:48.927] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:19:48, /house/create operate POST request failed 
header info: {"content-type":"text/plain","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"617bd73a-6876-4056-b68f-4beae8062637","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"31","connection":"keep-alive"} 
request body info: {} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"notNull Violation: house.status cannot be null,\nnotNull Violation: house.type cannot be null"} 
error name: SystemError 

[2020-05-09T18:21:42.338] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:21:42.340] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:23:08.590] [ERROR] response - /house/create request operate an no-base-error, name: SequelizeValidationError, message: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
[2020-05-09T18:23:08.593] [ERROR] response - SequelizeValidationError: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
    at E:\myRepository\mingou\node_modules\sequelize\lib\instance-validator.js:74:15
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at Promise._fulfill (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:673:18)
    at PromiseArray._resolve (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:127:19)
    at PromiseArray._promiseFulfilled (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:145:14)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:609:26)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-05-09T18:23:08.613] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:23:08, /house/create operate POST request failed 
header info: {"content-type":"text/plain","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"56947c9e-36c1-436e-a5f2-b5b4eb398992","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"37","connection":"keep-alive"} 
request body info: {} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"notNull Violation: house.status cannot be null,\nnotNull Violation: house.type cannot be null"} 
error name: SystemError 

[2020-05-09T18:23:41.533] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:23:41.535] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:23:44.045] [ERROR] response - /house/create request operate an no-base-error, name: SequelizeValidationError, message: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
[2020-05-09T18:23:44.051] [ERROR] response - SequelizeValidationError: notNull Violation: house.status cannot be null,
notNull Violation: house.type cannot be null
    at E:\myRepository\mingou\node_modules\sequelize\lib\instance-validator.js:74:15
    at tryCatcher (E:\myRepository\mingou\node_modules\bluebird\js\release\util.js:16:23)
    at Promise._settlePromiseFromHandler (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:547:31)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:604:18)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at Promise._fulfill (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:673:18)
    at PromiseArray._resolve (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:127:19)
    at PromiseArray._promiseFulfilled (E:\myRepository\mingou\node_modules\bluebird\js\release\promise_array.js:145:14)
    at Promise._settlePromise (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:609:26)
    at Promise._settlePromise0 (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:649:10)
    at Promise._settlePromises (E:\myRepository\mingou\node_modules\bluebird\js\release\promise.js:729:18)
    at _drainQueueStep (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:93:12)
    at _drainQueue (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:86:9)
    at Async._drainQueues (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (E:\myRepository\mingou\node_modules\bluebird\js\release\async.js:15:14)
    at processImmediate (internal/timers.js:456:21)
[2020-05-09T18:23:44.059] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:23:44, /house/create operate POST request failed 
header info: {"content-type":"text/plain","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"ddc9b87e-f837-45fc-8ca5-d7549900dbed","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"37","connection":"keep-alive"} 
request body info: {} 
response info: {"code":500,"message":"服务器内部错误","data":null,"error":"notNull Violation: house.status cannot be null,\nnotNull Violation: house.type cannot be null"} 
error name: SystemError 

[2020-05-09T18:30:10.967] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:30:10.969] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:30:14.932] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:30:14, /house/create operate POST request failed 
header info: {"content-type":"text/plain","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"9cd1a1c7-d27b-414f-86e7-8ac1cd9ccf03","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"37","connection":"keep-alive"} 
request body info: {} 
response info: {"code":400,"message":"社区编号不能为空","data":null,"error":"Validate Failed"} 
error name: ValidateError 

[2020-05-09T18:35:46.259] [WARN] response - *************DEBUG**************** 
time: 2020-5-9 18:35:46, /house/list/21 operate GET request failed 
header info: {"content-type":"application/json","user-agent":"PostmanRuntime/7.23.0","accept":"*/*","cache-control":"no-cache","postman-token":"cce1c869-cee7-4b22-a4f7-16cb23a4b1e1","host":"127.0.0.1:6000","accept-encoding":"gzip, deflate, br","content-length":"37","connection":"keep-alive"} 
request body info: {"uid":21,"status":2,"type":3} 
response info: {"code":1301,"message":"请先登陆","data":null,"error":"请先登陆"} 
error name: AppError 

[2020-05-09T18:40:06.900] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:40:06.902] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
[2020-05-09T18:52:53.374] [WARN] server - Server Listening HTTP On port:6000
[2020-05-09T18:52:53.376] [WARN] server - {
  port: 6000,
  path: 'E:\\myRepository\\mingou',
  subpath: 'application',
  proxy: true,
  outside: false,
  debug: true,
  cors: { origin: '*', maxAge: 3600 },
  log: { fileName: 'app', isCompress: false, keepDays: 30 },
  resources: {
    Mysql: Sequelize {
      options: [Object],
      config: [Object],
      dialect: [MysqlDialect],
      queryInterface: [QueryInterface],
      models: [Object],
      modelManager: [ModelManager],
      connectionManager: [ConnectionManager],
      importCache: [Object],
      Op: [Object]
    },
    Redis: Redis {
      options: [Object],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      scriptsSet: {},
      commandQueue: [Denque],
      offlineQueue: [Denque],
      connectionEpoch: 1,
      connector: [StandaloneConnector],
      retryAttempts: 0,
      status: 'ready',
      condition: [Object],
      stream: [Socket],
      serverInfo: [Object],
      [Symbol(kCapture)]: false
    }
  },
  tasks: [],
  middlewares: [ { file: 'token', switch: true, TokenName: 'Auth-Token' } ],
  static: false,
  i18n: false,
  maintenance: false,
  ips: [],
  unips: [],
  closes: [],
  CONTROLLER_PATH: 'E:\\myRepository\\mingou\\controllers\\application',
  TASK_PATH: 'E:\\myRepository\\mingou\\tasks\\application',
  MIDDLEWARE_PATH: 'E:\\myRepository\\mingou\\middlewares\\application',
  ROUTE_PATH: 'E:\\myRepository\\mingou\\routes\\application',
  MESSAGE_PATH: 'E:\\myRepository\\mingou\\messages\\application',
  LOG_PATH: 'E:\\myRepository\\mingou\\logs\\application',
  STATIC_PATH: 'E:\\myRepository\\mingou\\public\\application'
}
